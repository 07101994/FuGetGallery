@page
@{    
    var package = await PackageData.GetAsync (RouteData.Values["id"], RouteData.Values["version"]);

    var framework = package.GetTargetFramework (RouteData.Values["targetFramework"]);

    var asm = framework?.GetAssembly (RouteData.Values["assemblyName"]);
    var asmDef = asm?.Definition;

    var types = asmDef != null ? (IEnumerable<Mono.Cecil.TypeDefinition>)asmDef.MainModule.Types : new Mono.Cecil.TypeDefinition[0];

    var namespaces = types.GroupBy(x => x.Namespace).OrderBy(x => x.Key).Where(x => !string.IsNullOrEmpty(x.Key)).ToList();

    var inputNamespace = (RouteData.Values["namespace"] ?? "").ToString().Trim();

    var ns = namespaces.FirstOrDefault (x => x.Key == inputNamespace);
    if (ns == null) {
        ns = namespaces.FirstOrDefault ();
    }

    var inputTypeName = (RouteData.Values["typeName"] ?? "").ToString().Trim();

    var typ = ns?.FirstOrDefault(x => x.Name == inputTypeName);

    var size = framework != null ? framework.SizeInBytes : package.SizeInBytes;

    var nupkgName = package.Id + "." + package.Version + ".nupkg";

    ViewData["Title"] = package.Id;
}

<h1>@package.Id <small>@package.Version</small></h1>

<p>
<a href="@package.DownloadUrl" type="button" class="btn btn-default">
  <span class="glyphicon glyphicon-download" aria-hidden="true"></span> @nupkgName
</a>
</p>

<pre><code class="xml" style="background-color:transparent">&lt;PackageReference Include="@package.Id" Version="@package.Version" /&gt;</code></pre>

@if (package.Error != null) {
    <p>Error: @package.Error</p>
}


<h2 style="margin-top:1em;">Frameworks</h2>

<nav style="margin-top:0em;line-height:2.75em;">
@foreach (var tf in package.TargetFrameworks) {
    var active = tf.Moniker == framework.Moniker ? "active" : "";
    var color = tf.Moniker.StartsWith("netstandard") ? "success" : 
                (tf.Moniker.StartsWith("net") ? "info" :
                 (tf.Moniker.StartsWith("portable") ? "warning" : "primary"));
    var bold = active == "active" ? "bold" : "normal";
    var tcolor = active == "active" ? "color:#fff" : "";
    <a class="btn btn-@color btn-sm @active" style="font-weight:@bold;@tcolor" role="button" href="/packages/@Uri.EscapeDataString(package.Id)/@Uri.EscapeDataString(package.Version)/@Uri.EscapeDataString(@tf.Moniker)">@tf.Moniker</a>
}
</nav>

<h2 style="margin-top:1em;margin-bottom:0em">API <small>@size.ToString("#,0") bytes</small></h2>

<div class="row">

@if (framework != null) {
<div class="col-xs-12 col-sm-3">
    <h3>Assemblies</h3>
    <ul style="max-height:10em;overflow:scroll;list-style-type:none;padding:0;white-space:nowrap">
    @foreach (var a in framework.Assemblies.OrderBy(x => x.FileName)) {
        var bold = a.FileName == asm?.FileName ? "bold" : "normal";
        var color = bold == "bold" ? "#000" : "#666";
        <li>
            <span class="glyphicon glyphicon-file" aria-hidden="true"></span>&nbsp;<a style="font-weight:@bold;color:@color;"
                href="/packages/@Uri.EscapeDataString(package.Id)/@Uri.EscapeDataString(package.Version)/@Uri.EscapeDataString(framework.Moniker)/@Uri.EscapeDataString(a.FileName)">@a.FileName</a>
        </li>
    }
    </ul>
</div>
}

@if (asmDef != null) {
    <div class="col-xs-12 col-sm-9">
        <h3>Namespaces</h3>
        <ul style="max-height:10em;overflow:scroll;list-style-type:none;padding:0;white-space:nowrap">
        @foreach (var n in namespaces) {
            var bold = n.Key == ns?.Key ? "bold" : "normal";
            var isPublic = n.Any(x => x.IsPublic);
            var color = bold == "bold" ? "#000" : (isPublic ? "#666" : "#CCC");
            <li>
                <span class="glyphicon glyphicon-book" aria-hidden="true"></span>&nbsp;<a style="font-weight:@bold;color:@color;"
                    href="/packages/@Uri.EscapeDataString(package.Id)/@Uri.EscapeDataString(package.Version)/@Uri.EscapeDataString(framework.Moniker)/@Uri.EscapeDataString(asm.FileName)/@Uri.EscapeDataString(n.Key)">@n.Key</a>
            </li>
        }
        </ul>
    </div>
}

</div>

<div class="row">

@if (ns != null) {
    <div class="col-xs-12 col-sm-3">
        <h3 id="types" style="margin-top:2em;">Types</h3>
        <ul style="list-style-type:none;padding:0;white-space:nowrap">
        @foreach (var t in ns.OrderBy(x => x.Name)) {
            var bold = t.Name == typ?.Name ? "bold" : "normal";
            var isPublic = t.IsPublic;
            var isEnum = t.IsEnum;
            var isDel = !isEnum && t.IsDelegate();
            var icon = isEnum ? "menu-hamburger" : (isDel ? "flash" : "unchecked");
            var color = bold == "bold" ? "#000" : (isPublic ? "#666" : "#CCC");
            var active = bold == "bold" ? "active" : "";
            <li>
            <a class="@active" style="font-weight:@bold;color:@color;"
            href="/packages/@Uri.EscapeDataString(package.Id)/@Uri.EscapeDataString(package.Version)/@Uri.EscapeDataString(framework.Moniker)/@Uri.EscapeDataString(asm.FileName)/@Uri.EscapeDataString(ns.Key)/@Uri.EscapeDataString(t.Name)#code">
            <span class="glyphicon glyphicon-@icon" aria-hidden="true"></span>&nbsp;@t.Name</a>
            </li>
        }
        </ul>
    </div>
}



@if (typ != null) {
    <div class="col-xs-12 col-sm-9" id="code" style="margin-top:5em">
        <pre style="tab-size: 4;line-height:1.2em;"><code class="csharp" style="background-color:transparent">@asm.DecompileType(typ)</code></pre>
    </div>
}

</div>




